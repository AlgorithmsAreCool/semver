override Semver.SemVersionRange.Equals(object obj) -> bool
override Semver.SemVersionRange.GetHashCode() -> int
override Semver.SemVersionRange.ToString() -> string
override Semver.UnbrokenSemVersionRange.Equals(object obj) -> bool
override Semver.UnbrokenSemVersionRange.GetHashCode() -> int
override Semver.UnbrokenSemVersionRange.ToString() -> string
Semver.SemVersion.Satisfies(Semver.SemVersionRange range) -> bool
Semver.SemVersion.Satisfies(Semver.UnbrokenSemVersionRange range) -> bool
Semver.SemVersion.Satisfies(string range, int maxLength = 2048) -> bool
Semver.SemVersion.Satisfies(string range, Semver.SemVersionRangeOptions options, int maxLength = 2048) -> bool
Semver.SemVersion.Satisfies(System.Predicate<Semver.SemVersion> predicate) -> bool
Semver.SemVersion.SatisfiesNpm(string range, bool includeAllPrerelease, int maxLength = 2048) -> bool
Semver.SemVersion.SatisfiesNpm(string range, int maxLength = 2048) -> bool
Semver.SemVersionRange
Semver.SemVersionRange.Contains(Semver.SemVersion version) -> bool
Semver.SemVersionRange.Count.get -> int
Semver.SemVersionRange.Equals(Semver.SemVersionRange other) -> bool
Semver.SemVersionRange.GetEnumerator() -> System.Collections.Generic.IEnumerator<Semver.UnbrokenSemVersionRange>
Semver.SemVersionRange.this[int index].get -> Semver.UnbrokenSemVersionRange
Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.AllowLeadingZeros = 1 -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.AllowLowerV = 8 -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.AllowMetadata = 4 -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.AllowUpperV = 16 -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.AllowV = Semver.SemVersionRangeOptions.AllowLowerV | Semver.SemVersionRangeOptions.AllowUpperV -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.IncludeAllPrerelease = 2 -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.Loose = Semver.SemVersionRangeOptions.AllowLeadingZeros | Semver.SemVersionRangeOptions.AllowMetadata | Semver.SemVersionRangeOptions.AllowV | Semver.SemVersionRangeOptions.OptionalMinorPatch -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.OptionalMinorPatch = 96 -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.OptionalPatch = 32 -> Semver.SemVersionRangeOptions
Semver.SemVersionRangeOptions.Strict = 0 -> Semver.SemVersionRangeOptions
Semver.UnbrokenSemVersionRange
Semver.UnbrokenSemVersionRange.Contains(Semver.SemVersion version) -> bool
Semver.UnbrokenSemVersionRange.End.get -> Semver.SemVersion
Semver.UnbrokenSemVersionRange.EndInclusive.get -> bool
Semver.UnbrokenSemVersionRange.Equals(Semver.UnbrokenSemVersionRange other) -> bool
Semver.UnbrokenSemVersionRange.IncludeAllPrerelease.get -> bool
Semver.UnbrokenSemVersionRange.Start.get -> Semver.SemVersion
Semver.UnbrokenSemVersionRange.StartInclusive.get -> bool
static Semver.SemVersionRange.All.get -> Semver.SemVersionRange
static Semver.SemVersionRange.AllRelease.get -> Semver.SemVersionRange
static Semver.SemVersionRange.AtLeast(Semver.SemVersion version, bool includeAllPrerelease = false) -> Semver.SemVersionRange
static Semver.SemVersionRange.AtMost(Semver.SemVersion version, bool includeAllPrerelease = false) -> Semver.SemVersionRange
static Semver.SemVersionRange.Create(params Semver.UnbrokenSemVersionRange[] ranges) -> Semver.SemVersionRange
static Semver.SemVersionRange.Create(System.Collections.Generic.IEnumerable<Semver.UnbrokenSemVersionRange> ranges) -> Semver.SemVersionRange
static Semver.SemVersionRange.Empty.get -> Semver.SemVersionRange
static Semver.SemVersionRange.Equals(Semver.SemVersion version) -> Semver.SemVersionRange
static Semver.SemVersionRange.Exclusive(Semver.SemVersion start, Semver.SemVersion end, bool includeAllPrerelease = false) -> Semver.SemVersionRange
static Semver.SemVersionRange.GreaterThan(Semver.SemVersion version, bool includeAllPrerelease = false) -> Semver.SemVersionRange
static Semver.SemVersionRange.implicit operator System.Predicate<Semver.SemVersion>(Semver.SemVersionRange range) -> System.Predicate<Semver.SemVersion>
static Semver.SemVersionRange.Inclusive(Semver.SemVersion start, Semver.SemVersion end, bool includeAllPrerelease = false) -> Semver.SemVersionRange
static Semver.SemVersionRange.InclusiveOfEnd(Semver.SemVersion start, Semver.SemVersion end, bool includeAllPrerelease = false) -> Semver.SemVersionRange
static Semver.SemVersionRange.InclusiveOfStart(Semver.SemVersion start, Semver.SemVersion end, bool includeAllPrerelease = false) -> Semver.SemVersionRange
static Semver.SemVersionRange.LessThan(Semver.SemVersion version, bool includeAllPrerelease = false) -> Semver.SemVersionRange
static Semver.SemVersionRange.operator !=(Semver.SemVersionRange left, Semver.SemVersionRange right) -> bool
static Semver.SemVersionRange.operator ==(Semver.SemVersionRange left, Semver.SemVersionRange right) -> bool
static Semver.SemVersionRange.Parse(string range, int maxLength = 2048) -> Semver.SemVersionRange
static Semver.SemVersionRange.Parse(string range, Semver.SemVersionRangeOptions options, int maxLength = 2048) -> Semver.SemVersionRange
static Semver.SemVersionRange.ParseNpm(string range, bool includeAllPrerelease, int maxLength = 2048) -> Semver.SemVersionRange
static Semver.SemVersionRange.ParseNpm(string range, int maxLength = 2048) -> Semver.SemVersionRange
static Semver.SemVersionRange.TryParse(string range, out Semver.SemVersionRange semverRange, int maxLength = 2048) -> bool
static Semver.SemVersionRange.TryParse(string range, Semver.SemVersionRangeOptions options, out Semver.SemVersionRange semverRange, int maxLength = 2048) -> bool
static Semver.SemVersionRange.TryParseNpm(string range, bool includeAllPrerelease, out Semver.SemVersionRange semverRange, int maxLength = 2048) -> bool
static Semver.SemVersionRange.TryParseNpm(string range, out Semver.SemVersionRange semverRange, int maxLength = 2048) -> bool
static Semver.UnbrokenSemVersionRange.All.get -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.AllRelease.get -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.AtLeast(Semver.SemVersion version, bool includeAllPrerelease = false) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.AtMost(Semver.SemVersion version, bool includeAllPrerelease = false) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.Empty.get -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.Equals(Semver.SemVersion version) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.Exclusive(Semver.SemVersion start, Semver.SemVersion end, bool includeAllPrerelease = false) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.GreaterThan(Semver.SemVersion version, bool includeAllPrerelease = false) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.implicit operator System.Predicate<Semver.SemVersion>(Semver.UnbrokenSemVersionRange range) -> System.Predicate<Semver.SemVersion>
static Semver.UnbrokenSemVersionRange.Inclusive(Semver.SemVersion start, Semver.SemVersion end, bool includeAllPrerelease = false) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.InclusiveOfEnd(Semver.SemVersion start, Semver.SemVersion end, bool includeAllPrerelease = false) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.InclusiveOfStart(Semver.SemVersion start, Semver.SemVersion end, bool includeAllPrerelease = false) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.LessThan(Semver.SemVersion version, bool includeAllPrerelease = false) -> Semver.UnbrokenSemVersionRange
static Semver.UnbrokenSemVersionRange.operator !=(Semver.UnbrokenSemVersionRange left, Semver.UnbrokenSemVersionRange right) -> bool
static Semver.UnbrokenSemVersionRange.operator ==(Semver.UnbrokenSemVersionRange left, Semver.UnbrokenSemVersionRange right) -> bool
