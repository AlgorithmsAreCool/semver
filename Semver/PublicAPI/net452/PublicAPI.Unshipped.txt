override Semver.Ranges.NpmRange.ToString() -> string
readonly Semver.Ranges.Comparers.Npm.NpmParseOptions.IncludePreRelease -> bool
Semver.Comparers.ISemVersionComparer
Semver.Ranges.Comparers.Npm.NpmParseOptions
Semver.Ranges.Comparers.Npm.NpmParseOptions.NpmParseOptions() -> void
Semver.Ranges.Comparers.Npm.NpmParseOptions.NpmParseOptions(bool includePreRelease = false) -> void
Semver.Ranges.Comparers.Npm.NpmParseOptions.Equals(Semver.Ranges.Comparers.Npm.NpmParseOptions other) -> bool
override Semver.Ranges.Comparers.Npm.NpmParseOptions.Equals(object obj) -> bool
override Semver.Ranges.Comparers.Npm.NpmParseOptions.GetHashCode() -> int
override Semver.Ranges.Comparers.Npm.NpmParseOptions.ToString() -> string
Semver.Ranges.ISemVersionRange
Semver.Ranges.ISemVersionRange.Contains(Semver.SemVersion version) -> bool
Semver.Ranges.NpmRange
Semver.Ranges.NpmRange.Contains(Semver.SemVersion version) -> bool
Semver.SemVersion.ComparePrecedenceTo(Semver.SemVersion other) -> int
Semver.SemVersion.CompareSortOrderTo(Semver.SemVersion other) -> int
Semver.SemVersion.PrecedenceEquals(Semver.SemVersion other) -> bool
Semver.SemVersion.Satisfies(Semver.Ranges.ISemVersionRange range) -> bool
Semver.SemVersion.SatisfiesNpm(string range, Semver.Ranges.Comparers.Npm.NpmParseOptions options = null) -> bool
static readonly Semver.Ranges.Comparers.Npm.NpmParseOptions.Default -> Semver.Ranges.Comparers.Npm.NpmParseOptions
static Semver.Ranges.NpmRange.Parse(string range) -> Semver.Ranges.NpmRange
static Semver.Ranges.NpmRange.Parse(string range, Semver.Ranges.Comparers.Npm.NpmParseOptions options) -> Semver.Ranges.NpmRange
static Semver.Ranges.NpmRange.TryParse(string strRange, out Semver.Ranges.NpmRange range) -> bool
static Semver.Ranges.NpmRange.TryParse(string strRange, Semver.Ranges.Comparers.Npm.NpmParseOptions options, out Semver.Ranges.NpmRange range) -> bool
static Semver.SemVersion.ComparePrecedence(Semver.SemVersion left, Semver.SemVersion right) -> int
static Semver.SemVersion.CompareSortOrder(Semver.SemVersion left, Semver.SemVersion right) -> int
static Semver.SemVersion.PrecedenceComparer.get -> Semver.Comparers.ISemVersionComparer
static Semver.SemVersion.PrecedenceEquals(Semver.SemVersion left, Semver.SemVersion right) -> bool
static Semver.SemVersion.SortOrderComparer.get -> Semver.Comparers.ISemVersionComparer
