version: 2.1.0-dev.{build}
pull_requests:
  do_not_increment_build_number: true
skip_branch_with_pr: true
image: Visual Studio 2019

configuration: Release

init:
- ps: |
    git config --global core.autocrlf true
    Write-Host "Appveyor build version: $env:APPVEYOR_BUILD_VERSION"
    $version = $env:APPVEYOR_BUILD_VERSION
    $env:GIT_HASH=$env:APPVEYOR_REPO_COMMIT.Substring(0, 10)
    Write-Host "Git commit hash: $env:GIT_HASH"
    If ($env:APPVEYOR_REPO_TAG -and ($env:APPVEYOR_REPO_TAG_NAME -match "^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$"))
    {
        $version=$env:APPVEYOR_REPO_TAG_NAME.Substring(1)
        Write-Host "Tagged version: $version"
    }
    $version_split_at_hyphen = $version -split '-'
    $major_minor_patch = $version_split_at_hyphen[0]
    $major_minor_patch_split = $major_minor_patch -split '.'
    $major = "$($major_minor_patch_split[0])"
    $minor = "0"
    # Because 2.0.6 was released, all future 2.X versions must be 2.1.0.0 assembly version
    # but future versions should be X.0.0.0
    If ($major -eq "2") { $minor = "1" }
    $assembly_version = "$major.$minor.0.0"
    $file_version = "$major_minor_patch.0"
    $informational_version = "$version+$env:GIT_HASH"
    Write-Host "Computed package version: $version"
    Write-Host "Computed assembly version: $assembly_version"
    Write-Host "Computed file version: $file_version"
    Write-Host "Computed info version: $informational_version"
    Update-AppveyorBuild -Version "$version"

dotnet_csproj:
  patch: true
  file: '**\Semver.csproj'
  package_version: '{version}'
  assembly_version: '{assembly_version}'
  file_version: '{file_version}'
  informational_version: "{informational_version}"

before_build:
  - dotnet restore
  
build:
  verbosity: minimal
  publish_nuget: true
  publish_nuget_symbols: true
  use_snupkg_format: true

# Test Discovery was running both xUnit and dotnet test.
# To prevent that, use a test script to run dotnet test.
test_script:
  - dotnet test "Semver.Test"
